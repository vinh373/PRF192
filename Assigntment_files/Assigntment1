#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Define the structure for product information
struct Product 
{
    int product_id;
    char product_name[50];
    float price;
    int quantity;
};

// Function Prototypes
void writeProducts(const char *filename, int numProducts);
void appendProducts(const char *filename, int numProducts);
void readProducts(const char *filename);
void modifyProduct(const char *filename);

int main() 
{
    const char *filename = "products.bin";
    int choice, numProducts;

    do {
        printf("\n-- Product Management System --\n");
        printf("1. Write Products\n");
        printf("2. Append Products\n");
        printf("3. Read Products\n");
        printf("4. Modify Product\n");
        printf("5. Exit\n");

        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) 
		{
            case 1:
                printf("Enter the number of products to write: ");
                scanf("%d", &numProducts);
                writeProducts(filename, numProducts);
                break;

            case 2:
                printf("Enter the number of products to append: ");
                scanf("%d", &numProducts);
                appendProducts(filename, numProducts);
                break;

            case 3:
                readProducts(filename);
                break;

            case 4:
                modifyProduct(filename);
                break;

            case 5:
                printf("Exiting...\n");
                break;

            default:
                printf("Invalid choice. Please try again.\n");
        }
    } while (choice != 5);

    return 0;
}

void writeProducts(const char *filename, int numProducts)
{
    struct Product p;
    
    FILE *file = fopen(filename, "wb");
    if (file == NULL) 
	{
        printf("Error opening file!\n");
        return;
    }
    
    while (numProducts <= 0) 
	{
        printf("Invalid size! Please enter a number more than 0.\n");
        printf("Enter the number of products to write: ");
        while (scanf("%d", &numProducts) != 1 || numProducts <= 0) 
		{
            printf("Invalid input! Enter a valid positive number: ");
            while (getchar() != '\n'); // Xóa bộ nhớ đệm
        }
    }

    for (int i = 0; i < numProducts; i++) 
	{
        printf("\nEnter details for product %d:\n", i + 1);

        printf("Product ID: ");
        while (scanf("%d", &p.product_id) != 1 || p.product_id <= 0) 
		{
            printf("Invalid input! Enter a valid positive Product ID: ");
            while (getchar() != '\n');
        }

		printf("Product Name: ");
		getchar();
		fgets(p.product_name, sizeof(p.product_name), stdin);
		p.product_name[strcspn(p.product_name, "\n")] = '\0';

        printf("Price: ");
        while (scanf("%f", &p.price) != 1 || p.price < 0) 
		{
            printf("Invalid input! Enter a non-negative price: ");
            while (getchar() != '\n');
        }

        printf("Quantity: ");
        while (scanf("%d", &p.quantity) != 1 || p.quantity < 0) 
		{
            printf("Invalid input! Enter a non-negative quantity: ");
            while (getchar() != '\n');
        }
    
        // Ghi dữ liệu vào file
        fwrite(&p, sizeof(struct Product), 1, file);
    }

    // Đóng file sau khi ghi xong
    fclose(file);

    printf("\nProducts written successfully!\n");
}

void appendProducts(const char *filename, int numProducts)
{
    struct Product p;
    
    FILE *file = fopen(filename, "ab");
    if (file == NULL) 
	{
        printf("Error opening file!\n");
        return;
    }
    
    while (numProducts <= 0) 
	{
        printf("Invalid size! Please enter a number more than 0.\n");
        printf("Enter the number of products to write: ");
        while (scanf("%d", &numProducts) != 1 || numProducts <= 0) 
		{
            printf("Invalid input! Enter a valid positive number: ");
            while (getchar() != '\n'); // Xóa bộ nhớ đệm
        }
    }

    for (int i = 0; i < numProducts; i++) 
	{
        printf("\nEnter details for product %d:\n", i + 1);

        printf("Product ID: ");
        while (scanf("%d", &p.product_id) != 1 || p.product_id <= 0) 
		{
            printf("Invalid input! Enter a valid positive Product ID: ");
            while (getchar() != '\n');
        }

		printf("Product Name: ");
		getchar();
		fgets(p.product_name, sizeof(p.product_name), stdin);
		p.product_name[strcspn(p.product_name, "\n")] = '\0';

        printf("Price: ");
        while (scanf("%f", &p.price) != 1 || p.price < 0) 
		{
            printf("Invalid input! Enter a non-negative price: ");
            while (getchar() != '\n');
        }

        printf("Quantity: ");
        while (scanf("%d", &p.quantity) != 1 || p.quantity < 0) 
		{
            printf("Invalid input! Enter a non-negative quantity: ");
            while (getchar() != '\n');
        }
    
        // Ghi dữ liệu vào file
        fwrite(&p, sizeof(struct Product), 1, file);
    }

    // Đóng file sau khi ghi xong
    fclose(file);

    printf("\nProducts written successfully!\n");
}

void readProducts(const char *filename) 
{
    struct Product p;
    FILE *file = fopen(filename, "rb");

    if (file == NULL) 
	{
        printf("Error! Cannot open file for reading.\n");
        return;
    }

    printf("\nReading products from the file:\n");
    printf("---------------------------------------------------------\n");
    printf("%-16s %-20s %-10s %-10s\n", "Product ID", "Product Name", "Price", "Quantity");
    printf("---------------------------------------------------------\n");

    while (fread(&p, sizeof(struct Product), 1, file)) 
	{
        printf("%-16d %-20s %-10.2f %-10d\n", p.product_id, p.product_name, p.price, p.quantity);
    }

    printf("---------------------------------------------------------\n");

    fclose(file);
}

void modifyProduct(const char *filename) 
{
    struct Product p;
    int search_id, found = 0;
    
    FILE *file = fopen(filename, "rb+");
    if (file == NULL) 
	{
        printf("Error! Cannot open file for modification.\n");
        return;
    }

    printf("Enter the Product ID to modify: ");
    scanf("%d", &search_id);

    while (fread(&p, sizeof(struct Product), 1, file)) 
	{
        if (p.product_id == search_id) 
		{ 
            found = 1;
            printf("\nProduct found! Enter new details:\n");

            printf("New Product Name: ");
            getchar(); 
            fgets(p.product_name, sizeof(p.product_name), stdin);
            p.product_name[strcspn(p.product_name, "\n")] = 0; 

            printf("New Price: ");
            scanf("%f", &p.price);

            printf("New Quantity: ");
            scanf("%d", &p.quantity);

            fseek(file, -((long)sizeof(struct Product)), SEEK_CUR); 
            fwrite(&p, sizeof(struct Product), 1, file); 
            printf("Product updated successfully!\n");
            break;
        }
    }

    if (!found) 
	{
        printf("Product with ID %d not found.\n", search_id);
    }

    fclose(file);
}
